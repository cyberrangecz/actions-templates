name: Java template

on:
  workflow_call:
    inputs:
      MAVEN_CLI_OPTS:
        type: string
        required: true
        default: ""
      IMAGE_NAME:
        type: string
        required: true
        default: "image"
      VERSION_PATH:
        type: string
        required: true
        default: ""
    secrets:
      NVD_API:
        required: true

env:
  GITHUB_WORKSPACE: ${{ github.workspace }}
  NVD_API_TOKEN: ${{ secrets.NVD_API }}

jobs:
  get_current_version:
    uses: cyberrangecz/actions-templates/.github/workflows/get_version.yml@master
    with:
      file_path: ${{ inputs.VERSION_PATH }}

  code_quality:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build with Maven
        run: |
          mvn -ntp clean install ${{ inputs.MAVEN_CLI_OPTS }} -Dmaven.repo.local=$GITHUB_WORKSPACE/.m2/repository

  build_container:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-24.04
    needs: [code_quality, get_current_version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          IMAGE_NAME: ${{ inputs.IMAGE_NAME }}-service
          IMAGE_TAG: ${{ github.ref == 'refs/heads/master' && format('{0}', needs.get_current_version.outputs.version ) || format('{0}-dev', needs.get_current_version.outputs.version) }}
        uses: docker/build-push-action@v6
        with:
          context: .  # Path to the Dockerfile
          file: ./Dockerfile
          build-args: |
            MAVEN_CLI_OPTS=${{ inputs.MAVEN_CLI_OPTS }}
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  generate_docs:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-24.04
    needs: code_quality
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Generate and Push Swagger Docs
        run: |
          mvn clean package ${{ inputs.MAVEN_CLI_OPTS }} -DskipTests -Dswagger.skip=false

      - name: Upload Docs files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc-files/

  upload_docs:
    needs: generate_docs
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
          
  # Controls if version consistent with semver and higner than last git tag.
  control_tag:
    if: github.event.pull_request.base.ref == 'master' || github.ref == 'refs/heads/master'
    needs: get_current_version
    uses: cyberrangecz/actions-templates/.github/workflows/tag_control_template.yml@master
    with:
      VERSION: ${{ needs.get_current_version.outputs.version }}

  # Push tag only from manual workflow_dispatch with confirmed tag creation
  push_tag:
    needs: [get_current_version, control_tag, build_container]
    uses: cyberrangecz/actions-templates/.github/workflows/tag_push_template.yml@master
    with:
      VERSION: ${{ needs.get_current_version.outputs.version }}
