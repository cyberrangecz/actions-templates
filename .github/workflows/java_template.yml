name: Java template

on:
  workflow_call:
    inputs:
      MAVEN_CLI_OPTS:
        type: string
        required: true
        default: ""
    secrets:
      READ_PACKAGES:
        required: true

env:
  GITHUB_WORKSPACE: ${{ github.workspace }}
  GITHUB_ACTOR: ${{ github.actor }}
  READ_PACKAGES_TOKEN: ${{ secrets.READ_PACKAGES }}
  PROPRIETARY_REPO_URL: ${{ vars.PROPRIETARY_REPO_URL }}

jobs:
  build_maven:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build with Maven
        run: |
          mvn clean install ${{ inputs.MAVEN_CLI_OPTS }} -Dmaven.repo.local=$GITHUB_WORKSPACE/.m2/repository -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}

  build_container:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build_maven
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          CI_CUSTOM_IMAGE_NAME: ${{ github.ref == 'refs/heads/master' && 'adaptive-training-service' || 'adaptive-training-service-develop' }}
        uses: docker/build-push-action@v6
        with:
          context: .  # Path to the Dockerfile
          file: ./Dockerfile
          build-args: |
            PROJECT_ARTIFACT_ID=${{ github.event.repository.name }}
            PROPRIETARY_REPO_URL=${{ vars.PROPRIETARY_REPO_URL }}
            GITHUB_ACTOR=${{ github.actor }}
            READ_PACKAGES_TOKEN=${{ secrets.READ_PACKAGES }}
            MAVEN_CLI_OPTS=${{ inputs.MAVEN_CLI_OPTS }}
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ env.CI_CUSTOM_IMAGE_NAME }}:${{ vars.VERSION }}

  generate_docs:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_maven
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Generate and Push Swagger Docs
        run: |
          mvn clean package ${{ inputs.MAVEN_CLI_OPTS }} -DskipTests -Dswagger.skip=false -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}

      - name: Upload Docs Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-docs
          path: doc-files/kypo-adaptive-training-swagger-open-api.yaml
          
