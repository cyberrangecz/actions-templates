name: Java template

on:
  workflow_call:
    inputs:
      MAVEN_CLI_OPTS:
        type: string
        required: true
        default: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"

jobs:
  build_maven:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build with Maven
        run: |
          mvn clean install $MAVEN_CLI_OPTS -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.ALL_REPOS_ACCESS_TOKEN }}
          PROPRIETARY_REPO_URL: ${{ vars.PROPRIETARY_REPO_URL }}

  build_container:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build_maven
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set VERSION variable
      id: set_version
      run: |
        # Default version if VERSION.txt doesn't exist or is empty
        DEFAULT_VERSION="0.0.0"
        
        # Check if vars.VERSION is set
        if [ -n "${{ vars.VERSION }}" ]; then
          echo "VERSION=${{ vars.VERSION }}" >> $GITHUB_ENV
        elif [ -f VERSION.txt ]; then
          # Extract the last non-empty line from VERSION.txt
          VERSION=$(grep -E '^[0-9]+\.[0-9]+\.[0-9]+' VERSION.txt | tail -n 1 | awk '{print $1}')
          echo "VERSION=${VERSION:-$DEFAULT_VERSION}" >> $GITHUB_ENV
        else
          echo "VERSION=$DEFAULT_VERSION" >> $GITHUB_ENV
        fi

      - name: Build and push Docker image
        env:
          CI_CUSTOM_IMAGE_NAME: ${{ github.ref == 'refs/heads/master' && 'kypo-adaptive-training-service' || 'kypo-adaptive-training-service-develop' }}
        uses: docker/build-push-action@v6
        with:
          context: .  # Path to the Dockerfile
          file: ./Dockerfile
          build-args: |
            PROPRIETARY_REPO_URL=${{ vars.PROPRIETARY_REPO_URL }}
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ env.CI_CUSTOM_IMAGE_NAME }}:${{ env.VERSION }}

  generate_docs:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_maven
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Generate and Push Swagger Docs
        run: |
          mvn clean package $MAVEN_CLI_OPTS -DskipTests -Dswagger.skip=false -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}

      - name: Upload Docs Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-docs
          path: doc-files/kypo-adaptive-training-swagger-open-api.yaml
          
